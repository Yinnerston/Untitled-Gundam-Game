"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3813],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(n),k=l,c=d["".concat(s,".").concat(k)]||d[k]||u[k]||i;return n?a.createElement(c,r(r({ref:t},m),{},{components:n})):a.createElement(c,r({ref:t},m))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7176:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const i={sidebar_label:"CSS"},r="CSS : Cascading Style Sheets",o={unversionedId:"frontend/css",id:"frontend/css",title:"CSS : Cascading Style Sheets",description:"- https://developer.mozilla.org/en-US/docs/Learn/CSS/Firststeps/Whatis_CSS",source:"@site/docs/frontend/03_css.md",sourceDirName:"frontend",slug:"/frontend/css",permalink:"/Untitled-Gundam-Game/docs/frontend/css",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/03_css.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"CSS"},sidebar:"tutorialSidebar",previous:{title:"HTML",permalink:"/Untitled-Gundam-Game/docs/frontend/html"},next:{title:"Responsive Design",permalink:"/Untitled-Gundam-Game/docs/frontend/responsive_design"}},s={},p=[{value:"ISOBAR best practices",id:"isobar-best-practices",level:3},{value:"The Box Model",id:"the-box-model",level:3},{value:"CSS Syntax:",id:"css-syntax",level:3},{value:"Rules in CSS",id:"rules-in-css",level:3},{value:"Functions in CSS",id:"functions-in-css",level:3},{value:"CSS Inheritance",id:"css-inheritance",level:3},{value:"Colours (color property)",id:"colours-color-property",level:3},{value:"Units in CSS",id:"units-in-css",level:3},{value:"CSS Layouts",id:"css-layouts",level:3},{value:"Flexbox Layout",id:"flexbox-layout",level:3},{value:"Grid Layout",id:"grid-layout",level:3},{value:"Normal Layout (Normal   Flow)",id:"normal-layout-normal---flow",level:3},{value:"Maintainable CSS",id:"maintainable-css",level:3},{value:"Logical Properties",id:"logical-properties",level:3},{value:"Spacing",id:"spacing",level:3}],m={toc:p},d="wrapper";function u(e){let{components:t,...i}=e;return(0,l.kt)(d,(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"css--cascading-style-sheets"},"CSS : Cascading Style Sheets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS"},"https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://web.dev/learn/css"},"https://web.dev/learn/css")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://reactnative.dev/docs/flexbox"},"https://reactnative.dev/docs/flexbox")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://maintainablecss.com/chapters/introduction/"},"https://maintainablecss.com/chapters/introduction/")),(0,l.kt)("li",{parentName:"ul"},"W3C Spec: ",(0,l.kt)("a",{parentName:"li",href:"https://www.w3.org/Style/CSS/"},"https://www.w3.org/Style/CSS/")," --\x3e Use to go deeper"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://every-layout.dev/"},"https://every-layout.dev/")," --\x3e TODO: interesting book by an author of web.dev CSS"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.joshwcomeau.com/css/understanding-layout-algorithms/"},"https://www.joshwcomeau.com/css/understanding-layout-algorithms/")," --\x3e TODO: Mental model shift on CSS"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://web.archive.org/web/20160329134901/http://isobar-idev.github.io/code-standards/#css_css"},"https://web.archive.org/web/20160329134901/http://isobar-idev.github.io/code-standards/#css_css"))),(0,l.kt)("p",null,"CSS Games:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://flexboxfroggy.com/"},"https://flexboxfroggy.com/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cssgridgarden.com/"},"https://cssgridgarden.com/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://flexboxzombies.com/p/flexbox-zombies"},"https://flexboxzombies.com/p/flexbox-zombies"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What is CSS?")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Language for specifying how documents are presented to users (styles, layouts, etc.)")),(0,l.kt)("p",null,"I have already learnt about these things in Teaser, but I want to learn more about them."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Box model"),(0,l.kt)("li",{parentName:"ul"},"Cascade"),(0,l.kt)("li",{parentName:"ul"},"Specificity"),(0,l.kt)("li",{parentName:"ul"},"Flexbox"),(0,l.kt)("li",{parentName:"ul"},"Grid"),(0,l.kt)("li",{parentName:"ul"},"Z-Index")),(0,l.kt)("h3",{id:"isobar-best-practices"},"ISOBAR best practices"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What should our CSS do?")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Be easily maintainable"),(0,l.kt)("li",{parentName:"ul"},"Follow clear patterns to understand"),(0,l.kt)("li",{parentName:"ul"},"Offer clear place for new styles going forward"),(0,l.kt)("li",{parentName:"ul"},"Not a drag on performance"),(0,l.kt)("li",{parentName:"ul"},"Not include unused style rules"),(0,l.kt)("li",{parentName:"ul"},"Address different devices, browsers, etc. with minimal code")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What should be consider when setting up CSS?")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"What are the default styles on our supported browser(s)"),(0,l.kt)("li",{parentName:"ul"},"What styles are global vs one-off"),(0,l.kt)("li",{parentName:"ul"},"Distinctions for code for layout vs content"),(0,l.kt)("li",{parentName:"ul"},"How the code will evolve"),(0,l.kt)("li",{parentName:"ul"},"Potential impact of bug fixes"),(0,l.kt)("li",{parentName:"ul"},"Use of images as CSS bg images vs inline HTML (content)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Before starting:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Review the design"),(0,l.kt)("li",{parentName:"ul"},"Plan around technical constraints"),(0,l.kt)("li",{parentName:"ul"},"Identify how content will be managed"),(0,l.kt)("li",{parentName:"ul"},"Be certain who will be able to modify the design directly via code"),(0,l.kt)("li",{parentName:"ul"},"Segment the code logically",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Separate page grids & containers from the content"),(0,l.kt)("li",{parentName:"ul"},"Create baseline components which are extendable"))),(0,l.kt)("li",{parentName:"ul"},"What are baseline components?",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Core brand styles"),(0,l.kt)("li",{parentName:"ul"},"Basic typograph & default HTML rules"),(0,l.kt)("li",{parentName:"ul"},"Site-wide styles"),(0,l.kt)("li",{parentName:"ul"},"Distinct sections of a site"),(0,l.kt)("li",{parentName:"ul"},"Micro-sites & landing pages"),(0,l.kt)("li",{parentName:"ul"},"Components, widgets or re-usable modules")))),(0,l.kt)("p",null,"Same as HTML, consider whether you really need it before adopting third party CSS components or frameworks"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Establishing CSS Conventions"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Keep your code consistent",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Formatting, Linting, naming conventions, file structure, example code, guide for component reuse"))),(0,l.kt)("li",{parentName:"ul"},"For large sites, don't use a single stylesheet!",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Can use CSS preprocessors to break style sheets into smaller and better organised files (and build process to recombine them for performance when serving)"))),(0,l.kt)("li",{parentName:"ul"},"Living style guides: Keep your style guide updated")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"CSS Best Practices"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Inclusion: Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"<link>")," tag to include all stylesheets in ",(0,l.kt)("inlineCode",{parentName:"li"},"<head>"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Don't use ",(0,l.kt)("inlineCode",{parentName:"li"},"@import")," for best performance as this blocks page rendering until completion"))),(0,l.kt)("li",{parentName:"ul"},"Formatting rules:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"New line for each selector / declaration"),(0,l.kt)("li",{parentName:"ul"},"Single space between the opening brace ",(0,l.kt)("inlineCode",{parentName:"li"},"{")),(0,l.kt)("li",{parentName:"ul"},"Lowercase for elements and shorthand hex values ",(0,l.kt)("inlineCode",{parentName:"li"},"#aaa")),(0,l.kt)("li",{parentName:"ul"},"Hyphenate class selector names (avoid snake_case and camelCase)"),(0,l.kt)("li",{parentName:"ul"},"Quote attribute values in selectors"),(0,l.kt)("li",{parentName:"ul"},"Use one-level indentation for each declaration"),(0,l.kt)("li",{parentName:"ul"},"The closing brace goes in the same column as the first character of a set of rules"),(0,l.kt)("li",{parentName:"ul"},"Use a single blank line between rules"),(0,l.kt)("li",{parentName:"ul"},"Inside sets of rules:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"prop: value")," use a single space to separate"),(0,l.kt)("li",{parentName:"ul"},"Double quotes for quoted values"),(0,l.kt)("li",{parentName:"ul"},"Always use a semicolon at the end of the last declaration"),(0,l.kt)("li",{parentName:"ul"},"Use shorthand when possible"),(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"0")," without units when allowed"))),(0,l.kt)("li",{parentName:"ul"},"Don't indent child styles",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Reasons: hinders maintainability, we use indents for media queries, structure frequently changes"))))),(0,l.kt)("li",{parentName:"ul"},"Specificity: Minimum specificity to achieve the desired style",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Don't use ",(0,l.kt)("inlineCode",{parentName:"li"},"!important")," (IT'S THE NUCLEAR OPTION)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id")," selector should be minimised (could use ",(0,l.kt)("inlineCode",{parentName:"li"},"class")," instead which is a lower specificity)"),(0,l.kt)("li",{parentName:"ul"},"id selectors should be mainly used as access points for JS"))),(0,l.kt)("li",{parentName:"ul"},"Vendor prefixes: When using vendor prefixed features, put the standardized rule at the end to ensure browsers optimize and use the standard if they recognize it."),(0,l.kt)("li",{parentName:"ul"},"Inline styling: Don't hard code into HTML markup (pref use ",(0,l.kt)("inlineCode",{parentName:"li"},".css")," stylesheet)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"performance loss is minimal"))),(0,l.kt)("li",{parentName:"ul"},"Usage of ",(0,l.kt)("inlineCode",{parentName:"li"},"box-sizing: border-box"),": TODO:")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"CSS Coding Patterns"),": Consider what components can be standardized"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Global defaults: Baseline HTML elements (keep these in their own baseline stylesheet)"),(0,l.kt)("li",{parentName:"ul"},"Page level rules: Grids for page layout can probably go in their own file"),(0,l.kt)("li",{parentName:"ul"},"Components: Related objects on a page. Can encapsulate these in distinct files by grouping them in a simple namespace like ",(0,l.kt)("strong",{parentName:"li"},"prefix-suffix-modifier")," type pattern",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Examples where this pattern might be useful: navbar, footer, page-info, article-date, lead, widgetfoo, byline"))),(0,l.kt)("li",{parentName:"ul"},"Modifiers: Extend existing components by creating distinct modifier classes with the prefix ",(0,l.kt)("inlineCode",{parentName:"li"},"mod")," --\x3e indicates this is a modifier and not a complete style",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'<div class="component-content mod-modifier-a">...</div>')))),(0,l.kt)("li",{parentName:"ul"},"State: State rules will use the ",(0,l.kt)("inlineCode",{parentName:"li"},"is-")," prefix",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},".component-group.is-full { ... } ")))),(0,l.kt)("li",{parentName:"ul"},"JS Prefixes: ",(0,l.kt)("inlineCode",{parentName:"li"},"js-execute")," rule should not appear in CSS file but only the JS file they are tied to",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'<button class="component-button js-execute">...</button>')))),(0,l.kt)("li",{parentName:"ul"},"Utilities: Using the ",(0,l.kt)("inlineCode",{parentName:"li"},"u-")," prefix, utilities are a type of component modifier that is specifically designed to be used on more than one component type",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"should serve only the modifier purpose intended without side effects when applied to any component, or component descendant."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"u-warning {...}"))))),(0,l.kt)("p",null,'Example component "namespaces" / naming convention'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"/* core component */\n.component { ... }\n\n/* component elements */\n.component-header { ... }\n.component-content { ... }\n\n/* component descendant */\n.component-content-group { ... }\n\n/* component descendant element */\n.component-content-group-header { ... }\n.component-content-group-imgs { ... }\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Next Steps"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Browser Compatibility"),(0,l.kt)("li",{parentName:"ul"},"Media Queries"),(0,l.kt)("li",{parentName:"ul"},"Accessibility and CSS"),(0,l.kt)("li",{parentName:"ul"},"CSS pre-processors usage"),(0,l.kt)("li",{parentName:"ul"},"Internet Explorer, or browser-specific bugs"),(0,l.kt)("li",{parentName:"ul"},"Usage of CSS3 transitions, transforms, and more"),(0,l.kt)("li",{parentName:"ul"},"Vendor prefixes"),(0,l.kt)("li",{parentName:"ul"},"Color Management")),(0,l.kt)("h3",{id:"the-box-model"},"The Box Model"),(0,l.kt)("p",null,"Intrinsic sizing: Fits to the size of the content. The browser makes decisions on sizing based on the box's content size."),(0,l.kt)("p",null,"Extrinsic sizing: There's a limit of how much content you can add before it overflows out of the element's bounds"),(0,l.kt)("admonition",{title:"Overflow",type:"tip"},(0,l.kt)("blockquote",{parentName:"admonition"},(0,l.kt)("p",{parentName:"blockquote"},"When a piece of content is too large for the box it's in "))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"The Box Model"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content box"),": Area the content lives in"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Padding box"),": Space surrounding the content box set by the ",(0,l.kt)("inlineCode",{parentName:"li"},"padding")," property",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Scrollbars will occupy this space with overflow rules such as ",(0,l.kt)("inlineCode",{parentName:"li"},"overflow: auto")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"overflow: scroll")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Border box"),": Space surrounding padding box set by the ",(0,l.kt)("inlineCode",{parentName:"li"},"border")," property"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Margin box"),": Space around your box set by the ",(0,l.kt)("inlineCode",{parentName:"li"},"margin")," property",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Properties like ",(0,l.kt)("inlineCode",{parentName:"li"},"outline")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"box-shadow")," occupy this space (they do not affect the size of the box itself)")))),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"The box model",src:n(1725).Z,width:"760",height:"520"})),(0,l.kt)("p",null,"How to debug the box model?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use browser devtools (inspect from the dropdown menu in chrome)")),(0,l.kt)("p",null,"Controlling the box model:"),(0,l.kt)("h3",{id:"css-syntax"},"CSS Syntax:"),(0,l.kt)("p",null,"Example CSS rulesets:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"/* element selector */\nh1 {\n  color: red;\n  font-size: 5em;\n}\n/* class selector */\n.exampleClassName  {\n  color: blue;\n}\n\n/* id selector */\n#idSelectorName {\n  color: green;\n}\n\n/* attribute selector */\n[data-type='primary'] {\n  color: red;\n}\n\n/* descendant combinator */\nli p  {\n  color: green;\n}\n\n/* adjacent sibling combinator */\nh1 + p {\n  font-size: 200%;\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Selector"),": Rules open with selctors that select the HTML element to style (",(0,l.kt)("inlineCode",{parentName:"li"},"h1")," in the example)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"In the example above, we use an element/type selector (selects all ",(0,l.kt)("inlineCode",{parentName:"li"},"h1")," elements)"),(0,l.kt)("li",{parentName:"ul"},"The class selector uses a ",(0,l.kt)("inlineCode",{parentName:"li"},".")," on the class attribute specified in HTML"),(0,l.kt)("li",{parentName:"ul"},"The id selector uses a ",(0,l.kt)("inlineCode",{parentName:"li"},"#")," on the id attribute specified in HTML"),(0,l.kt)("li",{parentName:"ul"},"Can combine the selectors such as ",(0,l.kt)("inlineCode",{parentName:"li"},"h1.className")," which selects all ",(0,l.kt)("inlineCode",{parentName:"li"},"h1"),' elements with the class attribute "className"'),(0,l.kt)("li",{parentName:"ul"},"Instruct CSS to look for attributes by wrapping the selector with square brackets ",(0,l.kt)("inlineCode",{parentName:"li"},"[ ]"),".",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Not including a value in the CSS rule looks for all elements containing that particular attribute regardless of value"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"{}")," curly braces enclose the declarations"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Declarations"),": ",(0,l.kt)("strong",{parentName:"li"},"Property")," and ",(0,l.kt)("strong",{parentName:"li"},"value")," pairs",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Property: Human readable identifyer indicating styling features"),(0,l.kt)("li",{parentName:"ul"},"Value: Value of the property indicating the style"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"descendant combinator"),": Spaces between the selectors denote selection based on nesting. So you can style things based on their location in a document",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"In the example, ",(0,l.kt)("inlineCode",{parentName:"li"},"li p")," selects all ",(0,l.kt)("inlineCode",{parentName:"li"},"p")," elements that is a descendent of a ",(0,l.kt)("inlineCode",{parentName:"li"},"li")," element"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"adjacent sibling combinator"),": Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"+")," symbol to style elements that come directly after another",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"h1 + p")," styles the ",(0,l.kt)("inlineCode",{parentName:"li"},"<p>")," elements that come right after a ",(0,l.kt)("inlineCode",{parentName:"li"},"<h1>")," element ")))),(0,l.kt)("p",null,"Styles based on State:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"a:link {\n  color: blue;\n}\n\na:visited {\n  color: pink;\n}\n\n/* Your list will now either have red dots, or red numbers */\nli::marker {\n  color: red;\n}\n\n/* Style content highlighted by the user */\n::selection {\n  background: black;\n  color: white;\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Psuedo-classes"),": Use the ",(0,l.kt)("inlineCode",{parentName:"li"},":")," symbol to target styles based on the state of an element"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pseudo-element"),": keyword added to a selector that lets you style a specific part of the selected element using the ",(0,l.kt)("inlineCode",{parentName:"li"},"::")," symbol")),(0,l.kt)("p",null,"CSS Matching:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Apply regex rules to matching"),(0,l.kt)("li",{parentName:"ul"},"Use grouping selectors to group multiple selectors together")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"/* Case insensitive attribute selector */\n[data-type='primary' s] {\n  color: red;\n}\n\n/* A href that contains \"example.com\" */\n[href*='example.com'] {\n  color: red;\n}\n\n/* A href that starts with https */\n[href^='https'] {\n  color: green;\n}\n\n/* A href that ends with .com */\n[href$='.com'] {\n  color: blue;\n}\n\n/* Grouping selector applies a rule to all the following selectors */\nstrong,\nem,\n.my-class,\n[lang] {\n  color: red;\n}\n\n/* Universal selector */\n* {}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"How to add CSS:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Link styles.css in the ",(0,l.kt)("inlineCode",{parentName:"li"},"<head>")," element using ",(0,l.kt)("inlineCode",{parentName:"li"},'<link rel="stylesheet" href="styles.css" />')),(0,l.kt)("li",{parentName:"ul"},"Internal stylesheet: Add ",(0,l.kt)("inlineCode",{parentName:"li"},"<style>")," element (bad practice as can lead to inconsistencies imports, better to keep everything on a stylesheet)"),(0,l.kt)("li",{parentName:"ul"},"Inline styles: Use style attribute such as ",(0,l.kt)("inlineCode",{parentName:"li"},'style="..."')," (bad practice same as internal stylesheets)")),(0,l.kt)("p",null,"Comments: Use ",(0,l.kt)("inlineCode",{parentName:"p"},"/*")," and end with ",(0,l.kt)("inlineCode",{parentName:"p"},"*/")," to add comments"),(0,l.kt)("h3",{id:"rules-in-css"},"Rules in CSS"),(0,l.kt)("p",null,"The cascade algorithm is split into 4 distinct stages."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Position and order of appearance"),": the order of which your CSS rules appear"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Specificity"),": an algorithm which determines which CSS selector has the strongest match"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Origin"),": the order of when CSS appears and where it comes from, whether that is a browser style, CSS from a browser extension, or your authored CSS"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Importance"),": some CSS rules are weighted more heavily than others, especially with the !important rule type")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cascade Rule"),": The CSS rule that appears latest in the document replace conflicting styles that appear earlier in the stylesheet"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Specificity Rule"),": There is an order of precendence between different types of selector"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"This rule uses a point system by adding all the selectors together. So, if you combine multiple selectors such as ",(0,l.kt)("inlineCode",{parentName:"li"},"a.my-class.another-class[href]:hover"),", it will be really hard to overwrite this with other CSS (solution: KISS! Use simple CSS rules when possible)"),(0,l.kt)("li",{parentName:"ul"},"Specificity selectors order (lowest to highest points)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Universal selector: 0 points"),(0,l.kt)("li",{parentName:"ul"},"Elements, pseudo-element selectors: 1 point"),(0,l.kt)("li",{parentName:"ul"},"Class, pseudo-class or attribute selector: 10 points"),(0,l.kt)("li",{parentName:"ul"},"ID selector: 100 points"),(0,l.kt)("li",{parentName:"ul"},"Inline Style attribute: 1000 points"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"!important")," rule: 10000 points"))),(0,l.kt)("li",{parentName:"ul"},"E.G. ",(0,l.kt)("inlineCode",{parentName:"li"},'a[href="#]')," is worth 11 points (1 from ",(0,l.kt)("inlineCode",{parentName:"li"},"a")," element selector + 10 from ",(0,l.kt)("inlineCode",{parentName:"li"},"href")," attribute selector)")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Specificity Category"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Inline Styles"),(0,l.kt)("td",{parentName:"tr",align:null},"Styles directly on the element using the ",(0,l.kt)("inlineCode",{parentName:"td"},"style")," attribute."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'<div style="...">'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"IDs"),(0,l.kt)("td",{parentName:"tr",align:null},"Selectors using the ID of an element."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"#someId"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Classes, Attributes & Pseudo-classes"),(0,l.kt)("td",{parentName:"tr",align:null},"Selectors based on class, attribute or pseudo-class."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".someClass"),", ",(0,l.kt)("inlineCode",{parentName:"td"},'[type="text"]'),", ",(0,l.kt)("inlineCode",{parentName:"td"},":hover"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Elements & Pseudo-elements"),(0,l.kt)("td",{parentName:"tr",align:null},"Selectors based on element name or pseudo-element."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"h1"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"::before"))))),(0,l.kt)("p",null,"How do I verify my CSS rules are working as intended?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use your ",(0,l.kt)("strong",{parentName:"li"},"browser DevTools")," (rule will be crossed out if it waas overridden)")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"@rules"),": Provide instruction for what CSS should perform or how it should behave"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@import"),": imports another stylesheet into your stylesheet"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"@media"),": Create media queries that use conditional logic for applying CSS styles")),(0,l.kt)("p",null,"E.G. Define a blue background if the browser viewport is wider than ",(0,l.kt)("inlineCode",{parentName:"p"},"30em")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"@media (min-width: 30em) {\n  body {\n    background-color: blue;\n  }\n}\n")),(0,l.kt)("h3",{id:"functions-in-css"},"Functions in CSS"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"calc"),": Do simple math"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},".box {\n  width: calc(90% - 30px);\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"transform")," functions: Apply transformations to elements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Values of the attribute ",(0,l.kt)("inlineCode",{parentName:"li"},"transform"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},".box {\n  margin: 30px;\n  width: 100px;\n  height: 100px;\n  background-color: rebeccapurple;\n  transform: rotate(0.8turn);\n}\n")),(0,l.kt)("h3",{id:"css-inheritance"},"CSS Inheritance"),(0,l.kt)("p",null,"CSS inherits rules (rules cascade down)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"every HTML element has every CSS property defined by a default value"),(0,l.kt)("li",{parentName:"ul"},"If the parent HTML element has a inheritable CSS property set, the children will inherit the property's values")),(0,l.kt)("p",null,"How do you explicitly inherit and control inheritance?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"inherit")," keyword to inherit rules from parent elements"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"initial"),": Reset to default value"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"unset"),": If the property is inheritable this is the same as ",(0,l.kt)("inlineCode",{parentName:"li"},"inherit"),", otherwise equalt o ",(0,l.kt)("inlineCode",{parentName:"li"},"initial"),". Useful because some properties are not inheritable")),(0,l.kt)("h3",{id:"colours-color-property"},"Colours (color property)"),(0,l.kt)("p",null,"Colour codes are a hexadecimal ",(0,l.kt)("inlineCode",{parentName:"p"},"#XXXXXX")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"#XXXXXXXX")," (last two hex values are opacity with 8 length hex string)"),(0,l.kt)("p",null,"Define RBG colours with ",(0,l.kt)("inlineCode",{parentName:"p"},"rgb()")," color function"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can use ","[0, 255]"," or ","[0%, 100%]"),(0,l.kt)("li",{parentName:"ul"},"Add alpha channel with ",(0,l.kt)("inlineCode",{parentName:"li"},"rgba()"))),(0,l.kt)("p",null,"HSL: Hue, Saturation, Lightness with ",(0,l.kt)("inlineCode",{parentName:"p"},"hsl()")," function"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can use ","[0deg, 360deg]"," or ","[0%, 100%]")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"HSL chart",src:n(6889).Z,width:"760",height:"482"})),(0,l.kt)("p",null,"Colours can also have ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#color_keywords"},"keywords")," such as ",(0,l.kt)("inlineCode",{parentName:"p"},"rebeccapurple")),(0,l.kt)("h3",{id:"units-in-css"},"Units in CSS"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ch")," unit: CSS value that allows you to control the size of text based on it's actual contextual size "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ch")," is based on the width of a ",(0,l.kt)("inlineCode",{parentName:"li"},"0")," character")),(0,l.kt)("p",null,"E.G: Limiting the width of a line to 70 characters"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"p {\n  font-size: 1.25rem;\n  max-width: 70ch;\n}\n")),(0,l.kt)("p",null,"Usage of unitless numbers: For css properties like ",(0,l.kt)("inlineCode",{parentName:"p"},"line-height"),", using unitless numbers indicates a ratio"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Bettter to use a unitless value for properties with ratios like ",(0,l.kt)("inlineCode",{parentName:"li"},"line-height: 1.5")," because ",(0,l.kt)("inlineCode",{parentName:"li"},"font-size")," can be inherited and thus defining a unitless ",(0,l.kt)("inlineCode",{parentName:"li"},"line-height")," adjusts the line height relative to the ",(0,l.kt)("inlineCode",{parentName:"li"},"font-size")),(0,l.kt)("li",{parentName:"ul"},"What properties use ratios when the value is a unitless number?",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Filter, opacity, some transform functions, etc.")))),(0,l.kt)("p",null,"Usage of percentages: How are percentages calculated?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"width"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"margin")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"padding"),": Percentage of the parent's width regardless of direction")),(0,l.kt)("p",null,"Dimensions: Attaching a unit to a number makes it a dimension."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Lengths are dimensions that refer to distance"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Absolute length"),": Lengths revolving around a fixed base value",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cm"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"mm"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Q")," (Quarter-millimeters), ",(0,l.kt)("inlineCode",{parentName:"li"},"in")," (inches)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pc")," (Pica: 1/6 of an inch)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pt")," (Point: 1/72th of an inch)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"px")," (Pixel: 1/96th of an inch)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Relative Length"),": Lengths revolving around a resizable base value (relative lengths are like percentages)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Relative to font-size:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"em"),": Relative to current font size"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ex"),': Height of the letter "x" == 0.5em '),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cap"),": Height of capital letters"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ch"),': Relative to the width of the "0"'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ic"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"rem"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"lh"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"rlh")))),(0,l.kt)("li",{parentName:"ul"},"Relative to the viewport (browser window):",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vw"),": 1% of viewport width (use to for resizing based on viewport width)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vh"),": 1% of viewport height (^ for height)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vi"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"vb"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"vmin"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"vmax"))))))),(0,l.kt)("p",null,"We saw angle units ",(0,l.kt)("inlineCode",{parentName:"p"},"deg")," in HSL"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can also use for rotation transforms")),(0,l.kt)("p",null,"Resolution units like ",(0,l.kt)("inlineCode",{parentName:"p"},"dpi"),": Use for serving up higher resolution images based on screen resolution"),(0,l.kt)("h3",{id:"css-layouts"},"CSS Layouts"),(0,l.kt)("p",null,"Before CSS was widely adopted in browsers, devs used HTML table elements to layout their HTML pages"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Nowadays, ",(0,l.kt)("inlineCode",{parentName:"li"},"flexbox")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"grid")," are used for layouts")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"display")," property: Determines whether an element is inline or block."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Possible values are: ",(0,l.kt)("inlineCode",{parentName:"li"},"inline"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"block")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"flex")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Inline elements"),": Elements that sit next to each other on the same line when possible."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Block elements"),": Elements that create a new line for themselves. Block elements expand to the size of the available inline dimension, spans the full width in a horizontal writing mode"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"display: flex")," makes the box a block-level box, and also converts its children to flex items")),(0,l.kt)("p",null,"Flexbox & Grid: Two different layout mechanisms that create layout rules for multiple elements"),(0,l.kt)("h3",{id:"flexbox-layout"},"Flexbox Layout"),(0,l.kt)("p",null,"Useful notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/"},"https://css-tricks.com/snippets/css/a-guide-to-flexbox/"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"TODO: Add the helpful images on properties like ",(0,l.kt)("inlineCode",{parentName:"li"},"justify-content")," to this doc."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://reactnative.dev/docs/flexbox"},"https://reactnative.dev/docs/flexbox")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://flexboxfroggy.com/"},"https://flexboxfroggy.com/")," --\x3e Nice game for learning flexbox layouts")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What problem does a Flexbox Layout solve?")),(0,l.kt)("p",null,"Flexbox is designed to provide a consistent layout on different screen sizes."),(0,l.kt)("p",null,"You will normally use a combination of ",(0,l.kt)("inlineCode",{parentName:"p"},"flex-direction"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"align-items"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"justify-content")," to achieve the right layout."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What is a Flexbox layout?")),(0,l.kt)("p",null,"Flexbox is a layout mechanism for one-dimensional layouts."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex")," defines how your items are going to fill the available space along your mail axis"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex-direction")," controls the direction in which the children of the node are laid out. Sets the ",(0,l.kt)("strong",{parentName:"li"},"main axis"),". The ",(0,l.kt)("strong",{parentName:"li"},"cross axis")," is perpendicular to the main axis.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Note: flex-direction is purely visual and setting this to ",(0,l.kt)("inlineCode",{parentName:"li"},"row-reverse")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"column-reverse")," may have negative consequences"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justify-content")," describes how to align children within the ",(0,l.kt)("strong",{parentName:"li"},"main axis")," of their container.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Align children ",(0,l.kt)("inlineCode",{parentName:"li"},"flex-start"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"flex-end"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"center"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"space-between"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"space-around"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"space-evenly")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://css-tricks.com/almanac/properties/j/justify-content/"},"justify-content property values")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"align-items")," describes how to align children within the ",(0,l.kt)("strong",{parentName:"li"},"cross axis")," of their container.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"align-content"),": determines the spacing between lines"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justify-self")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"align-self"),": Apply to individual items"),(0,l.kt)("li",{parentName:"ul"},"Items stay on the same axis")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What is ",(0,l.kt)("inlineCode",{parentName:"strong"},"flex-wrap"),"?")),(0,l.kt)("p",null,"Flexbox doesn't wrap items unless you specify it (single line by default). ",(0,l.kt)("inlineCode",{parentName:"p"},"flex-wrap")," will cause items to be wrapped into multiple lines along the main axis if required. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"wrap")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"nowrap")," default.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Flexbox shortcuts:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex:")," can take up to three arguments ",(0,l.kt)("inlineCode",{parentName:"li"},"flex-grow flex-shrink flex-basis"),". Recommended you use this shorthand instead of setting each individual property",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Initial values are:"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex-grow: 0"),": Items do not grow --\x3e Proportion of space in the flexbox the item takes up"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex-shrink: 1"),": Items can shrink smaller than their ",(0,l.kt)("inlineCode",{parentName:"li"},"flex-basis")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex-basis: auto"),": Items have a base size of ",(0,l.kt)("inlineCode",{parentName:"li"},"auto")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex-flow")," is a shorthand for combining ",(0,l.kt)("inlineCode",{parentName:"li"},"flex-direction")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"flex-wrap")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"place-content")," is a shorthand for ",(0,l.kt)("inlineCode",{parentName:"li"},"justify-content")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"align-items"))),(0,l.kt)("p",null,"Grid garden example: Red/green frogs are together. Yellow frogs are together."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flex-flow"),": Sets flex-direction and wrap + wrap direction"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"align-items"),": flex-start causes frogs to hug the left border (because column-reverse flex-direction)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justify-content"),": centers in middle of column (because column-reverse flex-direction)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"align-content"),": space-between causes items to be evenly distributed in the line; with the first item on the start line, and last item on the end line")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Grid Garden Example 24",src:n(9232).Z,width:"3787",height:"1877"})),(0,l.kt)("h3",{id:"grid-layout"},"Grid Layout"),(0,l.kt)("p",null,"Useful notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://css-tricks.com/snippets/css/complete-guide-grid/"},"https://css-tricks.com/snippets/css/complete-guide-grid/"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"TODO: Add the images on properties like"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://cssgridgarden.com/"},"https://cssgridgarden.com/")," --\x3e Really fun CSS grid layout game")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What problem does a Grid Layout solve?")),(0,l.kt)("p",null,"Any two-dimensional grid-based layout system! An example would be the Header, sidebar, content and footer layouts on a page."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Grid Layout Example",src:n(8117).Z,width:"645",height:"495"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"What is a Grid layout?")),(0,l.kt)("p",null,"Grid is similar to flexbox but designed to control multi-access layouts. Grid gives you precise control of items in two dimensions"),(0,l.kt)("p",null,"Defined by ",(0,l.kt)("inlineCode",{parentName:"p"},"display: grid")," on the container."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Important CSS Grid terminology"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Grid container: Element on which ",(0,l.kt)("inlineCode",{parentName:"li"},"display: grid")," is aplied. Direct parent of all grid items"),(0,l.kt)("li",{parentName:"ul"},"Grid item: Descendent of grid container"),(0,l.kt)("li",{parentName:"ul"},"Grid line: Dividing line that makes up the structure of the grid."),(0,l.kt)("li",{parentName:"ul"},"Grid cell: a single \u201cunit\u201d of the grid"),(0,l.kt)("li",{parentName:"ul"},"Grid track: Space between two lines --\x3e A whole row or column of grid cells"),(0,l.kt)("li",{parentName:"ul"},"Grid area: Total space surrounded by four grid lines. An rectangular area inside the grid of units")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Grid Container properties"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"display: grid")," : how you define the element as a container"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-columns")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-rows"),": Define the columns and rows of the grid with a space separated list of values. Values represent track size, and space between them represents the grid line",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"You can name grid lines"),(0,l.kt)("li",{parentName:"ul"},"track size: Accept values are ",(0,l.kt)("inlineCode",{parentName:"li"},"%"),", length or ",(0,l.kt)("inlineCode",{parentName:"li"},"fr")," fraction of the free space",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fr")," works the same as a flex unit",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If the other units are pixels, percentages or ems, columns set with ",(0,l.kt)("inlineCode",{parentName:"li"},"fr")," will fit the remaining space. Useful for taking up the rest of the space when you have fixed components"))))),(0,l.kt)("li",{parentName:"ul"},"Intrinsic sizing keywords: keywords designed in box sizing spec to add additional ways of sizing boxes in CSS",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min-content"),": Make track as small as possible without overflow",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"longest word or image"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max-content"),": Make track wide enough to display in one unbroken string (causes overflow if wrap is not enabled)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"longest sentence or biggest image"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fit-content()"),": max-content but wraps once it passes the passed in threshold"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minmax()")," Set min and max size of a track"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"repeat()"),": Use to repeat any section of your track listing",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto-fill"),": auto-fill FILLS the row with as many columns as it can fit. These cell may be empty / not defined in HTML!"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto-fit")," fits the AVAILABLE cells to the space."),(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"repeat(auto-fill, 200px);")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"repeat(auto-fit, 200px);")," to ",(0,l.kt)("strong",{parentName:"li"},"repeat as many fixed-length grid cells as will fit")," in the track"),(0,l.kt)("li",{parentName:"ul"},"If there is a <200px gap due to viewport size, it will not be filled. Add ",(0,l.kt)("inlineCode",{parentName:"li"},"minmax(*, 1fr)")," such as ",(0,l.kt)("inlineCode",{parentName:"li"},"repeat(auto-fill, minmax(200px, 1fr));")," to divy the remaining area between the cells")))))),(0,l.kt)("p",null,"Example grid:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},".container {\n    display: grid;\n    grid-template-columns:\n      [main-start aside-start] 1fr\n      [aside-end content-start] 2fr\n      [content-end main-end]; /* a two column layout */\n}\n\n.sidebar {\n    grid-column: aside-start / aside-end;\n    /* placed between line 1 and 2*/\n}\n\nfooter {\n    grid-column: main-start / main-end;\n    /* right across the layout from line 1 to line 3*/\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Auto-placement: How to control the placement of items in a grid")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-auto-flow")," controls whether the placement is in rows or columns"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"writing-mode")," is for other languages basically (think japanese with vertical characters or arabic rtl)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-end")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row-end"),": Cause elements to span multiple tracks using the ",(0,l.kt)("inlineCode",{parentName:"li"},"span")," keyword on an item",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Can specify the ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-start")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row-start"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Goes from ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-start")," --\x3e ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-end")),(0,l.kt)("li",{parentName:"ul"},"Either value is can be an index or a span from the other value"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-end")," is non-inclusive"),(0,l.kt)("li",{parentName:"ul"},"Both can have negative values"))),(0,l.kt)("li",{parentName:"ul"},"Values are the starting / ending lines (can double check lines with devTools)"),(0,l.kt)("li",{parentName:"ul"},"Use shorthands ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column"),": start-col / end-col. Works with ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row")," too",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"span")," & negatives also works with grid-column/row"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-area")," is yet another shorthand with syntax: ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row-start"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-start"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row-end"),", followed by ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-end"),".")))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Placing items")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Stack items using ",(0,l.kt)("inlineCode",{parentName:"li"},"z-index")),(0,l.kt)("li",{parentName:"ul"},"Items are ordered smallest to largest ","[-inf, inf]",". Change the ",(0,l.kt)("inlineCode",{parentName:"li"},"order")," of items"),(0,l.kt)("li",{parentName:"ul"},"Explicit Grid: Grid explicitly defined by css properties like ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-rows")),(0,l.kt)("li",{parentName:"ul"},"Implicit Grid: the browser automatically creates the necessary tracks when items are placed outside the explicitly defined grid (e.g. too many grid items overflows the grid)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-auto-rows")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-auto-columns")," to size implicit rows/columns"))),(0,l.kt)("li",{parentName:"ul"},"Negative numbers: Using negative line numbers you can place items from the end line of the explicit grid. ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"E.G. Sidebar spanning entire column track (first to last column line) using ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column: 1 / -1")),(0,l.kt)("li",{parentName:"ul"},"However, if there is an implicit grid (too many elements overflows the grid), then the sidebar will not span the implicit grid")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Grid Template Areas"),": Name areas of the grid and place items into the named areas"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"use the ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-area")," property to give direct children a name"),(0,l.kt)("li",{parentName:"ul"},"Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-areas")," property to define which grid cells each item will span",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"No empty cells allowed"),(0,l.kt)("li",{parentName:"ul"},"Span tracks by repeating the name"),(0,l.kt)("li",{parentName:"ul"},"Areas created must be rectangular and not disconnected"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},".")," for whitespace"))),(0,l.kt)("li",{parentName:"ul"},"Why? If the entire layout is defined in one place, it's much easier to understand")),(0,l.kt)("p",null,"Example using the ",(0,l.kt)("inlineCode",{parentName:"p"},"grid-template-areas")," property"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},'header {\n    grid-area: header;\n}\n.sidebar {\n    grid-area: sidebar;\n}\n.content {\n    grid-area: content;\n}\nfooter {\n    grid-area: footer;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: repeat(4,1fr);\n    grid-template-areas:\n        "header header header header"\n        "sidebar content content content"\n        "sidebar footer footer footer";\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Debugging the Grid:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Open DevTools"),(0,l.kt)("li",{parentName:"ul"},"Select ",(0,l.kt)("inlineCode",{parentName:"li"},"grid")," badge next to grid container in the element selector"),(0,l.kt)("li",{parentName:"ul"},"Goto layout tab")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"List of shorthand properties")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-template"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-rows")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-columns")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-areas")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-rows")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-columns")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-template-areas")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-auto-rows")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-auto-columns")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-auto-flow")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-column")," : ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-start")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-end"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Same for grid-row"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grid-area"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row-start")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-start")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-row-end")," ",(0,l.kt)("inlineCode",{parentName:"li"},"grid-column-end"))),(0,l.kt)("p",null,"Grids use the same alignment properties as flexbox."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justify-content")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"align-content"),": distribute additional space in the grid container around or between tracks."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justify-self")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"align-self"),": are applied to a grid item to move it around inside the grid area it is placed in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"This causes ",(0,l.kt)("inlineCode",{parentName:"li"},"background-color")," to fill the grid area as they default to stretch"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justify-items")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"align-items"),": are applied to the grid container to set all of the justify-self properties on the items.")),(0,l.kt)("h3",{id:"normal-layout-normal---flow"},"Normal Layout (Normal   Flow)"),(0,l.kt)("p",null,"If grid and flexbox are not being used, your elements display in normal flow."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Normal Flow: Document flow is the arrangement of page elements, as defined by CSS positioning statements"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"display: inline-block"),": Respects block margin and padding but still flows inline with the text"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"float")," property: Wrap text around images with values ",(0,l.kt)("inlineCode",{parentName:"li"},"left"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"right")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"inherit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"column-count")," property in lists: Use for multicolumn layout where the content at the end of one column flows into the next column"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"position")," property: How an element is positioned in the normal flow and relative to others",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"relative"),": positioned relative to itself and also makes it the containing block of any child elements with ",(0,l.kt)("inlineCode",{parentName:"li"},"position: absolute")," (children repositioned relative to this element)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"absolute"),": breaks the element out of the current document flow",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Can position elements anywhere you want such as using ",(0,l.kt)("inlineCode",{parentName:"li"},"top"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"bottom"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"left"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"right")," in it's nearest relative parent (root element is also relative) "),(0,l.kt)("li",{parentName:"ul"},"All of the content surrounding an absolute element reflows to fill the remaining space left by that element."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"fixed"),": behaves in a similar way to absolute, with its parent being the root ",(0,l.kt)("inlineCode",{parentName:"li"},"<html>")," element"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sticky"),": Has the fixed aspects of ",(0,l.kt)("inlineCode",{parentName:"li"},"fixed")," and the more predictable document flow-honoring aspects of ",(0,l.kt)("inlineCode",{parentName:"li"},"relative"),". When the viewport scrolls past the element, it stays anchored to the ",(0,l.kt)("inlineCode",{parentName:"li"},"top"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"bottom"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"left"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"right")," values",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"E.G. Use this for sticky sidebar elements that follow the page when scrolling"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"static"),": Default value")))),(0,l.kt)("h3",{id:"maintainable-css"},"Maintainable CSS"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://maintainablecss.com/"},"https://maintainablecss.com/")),(0,l.kt)("admonition",{title:"Note",type:"danger"},(0,l.kt)("p",{parentName:"admonition"},"Honestly, I don't know how useful this is. Just read it and jotted it down. Use with care!")),(0,l.kt)("p",null,"Semantic class names: Name something based on what it is"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},'/* Good */\n<div class="hero">\n  <h1 class="hero-title">Heading</h1>\n  <p class="hero-tagline">Tagline</p>\n</div>\n\n/* Bad */\n<div class="pb3 pb4-ns pt4 pt5-ns mt4 black-70 fl-l w-50-l">\n  <h1 class="f4 fw6 f1-ns lh-title measure mt0">Heading</h1>\n  <p class="f5 f4-ns fw4 b measure dib-m lh-copy">Tagline</p>\n</div>\n')),(0,l.kt)("p",null,"Use an ID when:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"There's only one instance of a thing"),(0,l.kt)("li",{parentName:"ul"},"You need to enable particular behaviours for browsers"),(0,l.kt)("li",{parentName:"ul"},"Avoid using ids as a hook style --\x3e Probably better to just use a class with one object instead")),(0,l.kt)("p",null,"CSS Conventions: ",(0,l.kt)("inlineCode",{parentName:"p"},".<module>[-<component>][-<state>] {}")),(0,l.kt)("p",null,"What is a CSS Module?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Module: Distinct, independent unit that can be combined with others to form a more complex structure."),(0,l.kt)("li",{parentName:"ul"},'If a component is shared, consider "upgrading it" to a module by specifying the common rules together'),(0,l.kt)("li",{parentName:"ul"},"Specific styling features that are not shared can be applied directly")),(0,l.kt)("p",null,"Example shared rules and differences"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},".basket-removeButton,\n.another-loginButton,\n.another-deleteButton {\n  background-color: green;\n  padding: 10px;\n  color: #fff;\n}\n\n.basket-removeButton {\n  float: right;\n}\n\n.another-deleteButton {\n  margin-bottom: 10px;\n}\n")),(0,l.kt)("p",null,"Modifiers: Denoted by ",(0,l.kt)("inlineCode",{parentName:"p"},"className--modifier")," are useful as an alternative to modules (or components) when they only have small and well understood differences"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"E.G. Primary / secondary button style")),(0,l.kt)("p",null,"Example modifier usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<div class="categoryHeader categoryHeader--boys">\n<div class="categoryHeader categoryHeader--girls">\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},".categoryHeader {\n  padding-top: 50px;\n  padding-bottom: 50px;\n  /* etc */\n}\n\n.categoryHeader--boys {\n  background-image: url(/path/to/boys.jpg);\n}\n\n.categoryHeader--girls {\n  background-image: url(/path/to/girls.jpg);\n}\n")),(0,l.kt)("p",null,"How to organize your CSS into folders?"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Put it all into a single folder "),(0,l.kt)("li",{parentName:"ol"},"Put it into a module folder (folders based on feature)")),(0,l.kt)("p",null,"Note: 31 CSS file limit in IE9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add compilation step with CSS preprocessor")),(0,l.kt)("h3",{id:"logical-properties"},"Logical Properties"),(0,l.kt)("p",null,"Logical properties refer to the edges of the box as they relate to the ",(0,l.kt)("em",{parentName:"p"},"flow of content.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Changes if text direction or writing mode changes"),(0,l.kt)("li",{parentName:"ul"},"Use logical properties to support internationalization")),(0,l.kt)("p",null,"Logical property important characteristics?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Block flow"),": Direction in which the content blocks are placed"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Inline flow"),": How text flows in a sentence. (changed by ",(0,l.kt)("inlineCode",{parentName:"li"},"writing-mode")," property)"),(0,l.kt)("li",{parentName:"ul"},"Flow relative: Apply margin, padding relative to the flow of the document",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Using physical properties like ",(0,l.kt)("inlineCode",{parentName:"li"},"margin-top")," dmeans the margin is constantly applied to the top of the element even if the writing direction is changed. If ",(0,l.kt)("inlineCode",{parentName:"li"},"margin-block-start")," is applied, the margin will appear at the start of the text regardless of text direction or language"))),(0,l.kt)("li",{parentName:"ul"},"Sizing: Flow relative equivalent to sizing:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max-width")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"max-inline-size")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"max-height")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"max-block-size")))),(0,l.kt)("li",{parentName:"ul"},"Text align: Use ",(0,l.kt)("inlineCode",{parentName:"li"},"start")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"end")," instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"left")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"right"))),(0,l.kt)("p",null,"Logical Property Equivalents:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-css"},"/*equivalent works for borders, margin, etc*/\n.my-element {\n  padding-top: 2em;\n  padding-bottom: 2em;\n  margin-left: 2em;\n  position: relative;\n  top: 0.2em;\n}\n\n.my-element {\n  padding-block-start: 2em;\n  padding-block-end: 2em;\n  margin-inline-start: 2em;\n  position: relative;\n  inset-block-start: 0.2em;\n}\n/*shorthand*/\n.my-element {\n  padding-block: 2em;\n  margin-inline: 2em 0;\n  position: relative;\n  inset-block: 0.2em 0;\n}\n")),(0,l.kt)("p",null,"New Logical units:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vi"),": 1% of viewport size in the inline direction"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"vb"),": !% of viewport size in the block direction")),(0,l.kt)("h3",{id:"spacing"},"Spacing"),(0,l.kt)("p",null,"Margin Collapse: Two adjoining vertical margins collapses to the size of the largest margin"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can be prevented using ",(0,l.kt)("inlineCode",{parentName:"li"},"position: absolute")," or the ",(0,l.kt)("inlineCode",{parentName:"li"},"float")," property"),(0,l.kt)("li",{parentName:"ul"},"applies to block elements")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gap")," property in grid and flexbox: shorthand for ",(0,l.kt)("inlineCode",{parentName:"p"},"row-gap")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"column-gap")," for space between elements"))}u.isMDXComponent=!0},1725:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/box-model-be5f77a81faf0a4f7264bf53acd64255.svg"},9232:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/grid-garden-24-aa82de5d73c97fc905dc9f118a1c1ff4.JPG"},8117:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/grid-layout-2537f3727a3bd72d62f431c0b1613901.svg"},6889:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/hsl-b9d09e26265abd08761832dc8e27d549.svg"}}]);