"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5061],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(a),d=r,k=m["".concat(o,".").concat(d)]||m[d]||c[d]||i;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[m]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1794:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_label:"C# Language and .NET"},l="C Language and .NET",s={unversionedId:"csharp/csharp_language",id:"csharp/csharp_language",title:"C Language and .NET",description:"Why use C",source:"@site/docs/csharp/01_csharp_language.md",sourceDirName:"csharp",slug:"/csharp/csharp_language",permalink:"/Untitled-Gundam-Game/docs/csharp/csharp_language",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/csharp/01_csharp_language.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"C# Language and .NET"},sidebar:"tutorialSidebar",previous:{title:"Web Dev Tooling",permalink:"/Untitled-Gundam-Game/docs/web/web_tooling"},next:{title:"Revisitng OOP",permalink:"/Untitled-Gundam-Game/docs/csharp/oop_revisited"}},o={},u=[{value:"Why use C#",id:"why-use-c",level:3},{value:"What is C#?",id:"what-is-c",level:3},{value:"Types in C#",id:"types-in-c",level:3},{value:"Organizational concepts in C#",id:"organizational-concepts-in-c",level:3},{value:"Methods and other function members",id:"methods-and-other-function-members",level:3},{value:"Other features",id:"other-features",level:3},{value:"What questions did I ask?",id:"what-questions-did-i-ask",level:3},{value:"What sounds interesting?",id:"what-sounds-interesting",level:3}],p={toc:u},m="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"c-language-and-net"},"C Language and .NET"),(0,r.kt)("h3",{id:"why-use-c"},"Why use C#"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We use C# in our chosen game engine ",(0,r.kt)("a",{parentName:"li",href:"https://unity.com/"},"Unity")),(0,r.kt)("li",{parentName:"ul"},"I'm learning .NET because it's a web framework written in C# too. I think it will be easier to have our codebase in one language so that new developers have an easier time contributing.")),(0,r.kt)("h3",{id:"what-is-c"},"What is C#?"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/"},"I'm following the microsoft docs")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://drive.google.com/file/d/15Y5aKcBjXt2kStfINNm01EO7y1qyJuF1/view?usp=sharing"},"Also reading through ",(0,r.kt)("inlineCode",{parentName:"a"},"Head First C#"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"C# is a statically typed, object oriented language."),(0,r.kt)("li",{parentName:"ul"},"Similar operation precedence to Javascript")),(0,r.kt)("h3",{id:"types-in-c"},"Types in C#"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Value Type"),": Directory contain their data",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Tuples: concise syntax to group multiple data elements in a lightweight data structure"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Reference Type"),": Objects --\x3e Store references",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Class types: Base class of all other types object.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Defines data members and function members"),(0,r.kt)("li",{parentName:"ul"},"Support single inheritance and polymorphism"),(0,r.kt)("li",{parentName:"ul"},"Polymorphism: Can extend base class through method overriding"))),(0,r.kt)("li",{parentName:"ul"},"Interface types: User defined interfaces",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"}))),(0,r.kt)("li",{parentName:"ul"},"Array types"),(0,r.kt)("li",{parentName:"ul"},"Delegate types: represents references to methods with a particular parameter list and return type",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Like function pointers, but OO and type-safe"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Nullable types"),": ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"    int? optionalInt = default; \n")),(0,r.kt)("h3",{id:"organizational-concepts-in-c"},"Organizational concepts in C#"),(0,r.kt)("p",null,"A hierarchy of organizational concepts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"programs"),": Encapsulate namespace(s)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"namespaces"),": Organize related type(s)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"types"),": Contain member(s)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"members"),": Any element that that makes up a type. ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Static members: Belong to classes"),(0,r.kt)("li",{parentName:"ul"},"Instance members: Belong to objects (instances of a class)"),(0,r.kt)("li",{parentName:"ul"},"Members can be constants, fields, methods, properties, etc.."),(0,r.kt)("li",{parentName:"ul"},"Accessibility: `",(0,r.kt)("inlineCode",{parentName:"li"},"[public, private, protected, internal, protected internal, private protected]")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"assemblies"),": Compiled output of a program or library. Typically has a ",(0,r.kt)("inlineCode",{parentName:"li"},".dll")," or ",(0,r.kt)("inlineCode",{parentName:"li"},".exe")," file extension")),(0,r.kt)("h3",{id:"methods-and-other-function-members"},"Methods and other function members"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"virtual")," method: declared and implemented in a base class where any derived class may provide a more specific implementation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"override")," method: implemented in a derived class that modifies the behavior of the base class' implementation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"abstract")," method: declared in a base class that ",(0,r.kt)("em",{parentName:"li"},"must")," be overridden in all derived classes",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Virtual method with no implementation"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Method overloading"),": C# allows method overloading (unique signatures / unique params for methods of the same name)")),(0,r.kt)("p",null,"Other function members include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Properties:"),(0,r.kt)("li",{parentName:"ul"},"Indexers:"),(0,r.kt)("li",{parentName:"ul"},"Constructors:"),(0,r.kt)("li",{parentName:"ul"},"Events:"),(0,r.kt)("li",{parentName:"ul"},"Finalizers:"),(0,r.kt)("li",{parentName:"ul"},"Operators:"),(0,r.kt)("li",{parentName:"ul"},"Expressions:"),(0,r.kt)("li",{parentName:"ul"},"Statements:")),(0,r.kt)("h3",{id:"other-features"},"Other features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All collections share a unifying principle for iteration",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"All collections can be used with LINQ queries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LINQ queries"),": SQL like syntax for composing queries on collections",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Works with Memory, XML, databases, arrays, etc.. ALL COLLECTIONS!")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n\nvar evenNumbers = from num in numbers\n                  where num % 2 == 0\n                  select num;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"C# supports ",(0,r.kt)("inlineCode",{parentName:"li"},"async")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"await"))),(0,r.kt)("h1",{id:"net-architecture"},".NET Architecture"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"C# programs run on .NET (virtual execution system called the common language runtime CLR)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"CLR is an implementation of the common language interface (CLI) --\x3e international standard"))),(0,r.kt)("li",{parentName:"ul"},"C# is compiled into an intemediate language (IL) conforming to CLI",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Intermediate language is compiled to machine code"))),(0,r.kt)("li",{parentName:"ul"},"Execution of a C# Program:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Assembly loads CLR"),(0,r.kt)("li",{parentName:"ul"},"Just in time (JIT) compilation converts the IL code to native machine instructions"),(0,r.kt)("li",{parentName:"ul"},"CLR executes machine instructions directly on the processor")))),(0,r.kt)("h3",{id:"what-questions-did-i-ask"},"What questions did I ask?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"What are generic classes used for?"),(0,r.kt)("li",{parentName:"ul"},"What is the main use case of delegate types? One use case seems to be mapping functions over arrays, but what other ways can this paradigm be applied?"),(0,r.kt)("li",{parentName:"ul"})),(0,r.kt)("h3",{id:"what-sounds-interesting"},"What sounds interesting?"))}c.isMDXComponent=!0}}]);