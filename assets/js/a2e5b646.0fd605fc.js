"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8437],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,k=m["".concat(u,".").concat(d)]||m[d]||s[d]||l;return r?n.createElement(k,i(i({ref:t},c),{},{components:r})):n.createElement(k,i({ref:t},c))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4264:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={},i="Unreal Engine",o={unversionedId:"unreal/unreal",id:"unreal/unreal",title:"Unreal Engine",description:"Rider",source:"@site/docs/unreal/01_unreal.md",sourceDirName:"unreal",slug:"/unreal/unreal",permalink:"/Untitled-Gundam-Game/docs/unreal/unreal",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/unreal/01_unreal.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Graphics in more detail",permalink:"/Untitled-Gundam-Game/docs/threejs/graphics"}},u={},p=[{value:"Rider",id:"rider",level:3},{value:"Class Hierarchy",id:"class-hierarchy",level:3},{value:"Engine Layout",id:"engine-layout",level:3},{value:"First Hour with Unreal",id:"first-hour-with-unreal",level:3}],c={toc:p},m="wrapper";function s(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"unreal-engine"},"Unreal Engine"),(0,a.kt)("h3",{id:"rider"},"Rider"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Shift + Shift"),": Search anywhere"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl + Left Click"),": Goto definition"),(0,a.kt)("h3",{id:"class-hierarchy"},"Class Hierarchy"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.tomlooman.com/ue4-gameplay-framework/"},"https://www.tomlooman.com/ue4-gameplay-framework/")),(0,a.kt)("p",null,"Object --\x3e Actor --\x3e Pawn --\x3e Character --\x3e SCharacter"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Object: base class"),(0,a.kt)("li",{parentName:"ul"},"Actor: Object that can be placed or spawned in.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Actors support damage out of the box."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"BeginPlay"),": Use to setup basic logic, timers, etc after fully initialized"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Tick"),": Called on every frame"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"EndPlay"),": Called when it is removed from the world"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GetComponentByClass"),": Find a single component instanc eof a specific class"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GetActorLocation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NotifyActorBeginOverlap")," + ",(0,a.kt)("inlineCode",{parentName:"li"},"GetOverlappingActors")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.unrealengine.com/5.3/en-US/unreal-engine-actor-lifecycle/"},"Actor lifecycle")))),(0,a.kt)("li",{parentName:"ul"},"Pawn: Controlled by players or AI"),(0,a.kt)("li",{parentName:"ul"},"Character: pawn with implemented walking movement"),(0,a.kt)("li",{parentName:"ul"},"SCharacter: Our first C++ Class")),(0,a.kt)("p",null,"Prefixes: UAFEI"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"U : Classes deriving from UObject"),(0,a.kt)("li",{parentName:"ul"},"A : Deriving form actor"),(0,a.kt)("li",{parentName:"ul"},"F : Structs"),(0,a.kt)("li",{parentName:"ul"},"E : Enums"),(0,a.kt)("li",{parentName:"ul"},"I : Interfaces")),(0,a.kt)("p",null,"Boilerplate:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GENERATED_BODY()")," : ")),(0,a.kt)("h3",{id:"engine-layout"},"Engine Layout"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Viewport: Primary view where you can see the level visually",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"How RMB + WASD to move"),(0,a.kt)("li",{parentName:"ul"},"G Game mode: Switch from player perspective to editor perspective "),(0,a.kt)("li",{parentName:"ul"},"Ctrl + Alt + Drag: Select objects in the bounding box"))),(0,a.kt)("li",{parentName:"ul"},"Details Panel:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Lock panel to bind to currently selected Actor"))),(0,a.kt)("li",{parentName:"ul"},"World Settings:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Kill-z : Kills actors that go below this z value")))),(0,a.kt)("h1",{id:"unreal-property-system"},"Unreal Property System:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"UPROPERTY, UFUNCTION, UCLASS, USTRUCT, UENUM"),(0,a.kt)("li",{parentName:"ul"},"Used for marking up C++ fopr editor and blueprint access, network behaviour (multiplayer) and memory management")),(0,a.kt)("h3",{id:"first-hour-with-unreal"},"First Hour with Unreal"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Windows > Env. Light Mixer"),": Add volumetric clouds, skylights, sky atmosphere etc."),(0,a.kt)("li",{parentName:"ul"},"Project Settings: Define default character, gamemode, etc."),(0,a.kt)("li",{parentName:"ul"},"World Settings: Define per level character, gamemode, etc.")))}s.isMDXComponent=!0}}]);