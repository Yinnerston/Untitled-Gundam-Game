"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5463],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},642:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_label:"Intro and Data Model"},i="Data Model",s={unversionedId:"webshowcase/intro",id:"webshowcase/intro",title:"Data Model",description:"- Use singular not plural table names",source:"@site/docs/webshowcase/01_intro.md",sourceDirName:"webshowcase",slug:"/webshowcase/intro",permalink:"/Untitled-Gundam-Game/docs/webshowcase/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/webshowcase/01_intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Intro and Data Model"},sidebar:"tutorialSidebar",previous:{title:"Azure & CI/CD",permalink:"/Untitled-Gundam-Game/docs/dotnet/azure"},next:{title:"Frontend",permalink:"/Untitled-Gundam-Game/docs/webshowcase/frontend"}},c={},l=[],u={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-model"},"Data Model"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use singular not plural table names"),(0,o.kt)("li",{parentName:"ul"})),(0,o.kt)("mermaid",{value:'erDiagram\n    User    {\n        int id PK "To be added with Azure Active Directory B2C"\n        string displayName\n    }\n    Post    {\n        int id PK\n        string title "StringLength=512"\n        string description "StringLength=4096, optional=True"\n        int postType "enum value of type PostType"\n        jsonb postData "json storing url, etc."\n        datetime createdAt "DefaultValue=getutcdate"\n        enum PostType "integer choice YOUTUBE: 0, WEBSITE: 1, WEBGL_ANIMATION: 2, WEBGL_GAME: 3"\n    }\n    CommentPath }o--|{ Post : "closure table"\n    CommentPath }o--|{ Comment : "closure table"\n    Comment    {\n    int id PK\n    int post FK "Post"\n    int user FK "User"\n    string commentText "StringLength=4096"\n    datetime createdAt "DefaultValue=getutcdate"\n    boolean hasReplies "default=False. Denormalized count > 0 on descendents in CommentPath"\n    int depth "DefaultValue=0. >=0"\n    }\n    CommentPath   {\n        int id PK\n        int post "Post"\n        int ancestor FK "Comment"\n        int descendent FK "Comment"\n        int depth "DefaultValue=0. >=0"\n        ordering order "Order by [post, ancestor]"\n        constraint uniqueTogether "[post, ancestor, descendent]"\n        index indices "[post, ancestor, descendent]"\n    }\n'}))}p.isMDXComponent=!0}}]);