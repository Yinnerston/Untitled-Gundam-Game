"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1179],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=l,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return n?a.createElement(k,r(r({ref:t},u),{},{components:n})):a.createElement(k,r({ref:t},u))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},183:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const i={sidebar_label:"MVC & WebAPI"},r="MVC & WebAPI",o={unversionedId:"dotnet/mvc_webapi",id:"dotnet/mvc_webapi",title:"MVC & WebAPI",description:"Models: Data model",source:"@site/docs/dotnet/04_mvc_webapi.md",sourceDirName:"dotnet",slug:"/dotnet/mvc_webapi",permalink:"/Untitled-Gundam-Game/docs/dotnet/mvc_webapi",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dotnet/04_mvc_webapi.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"MVC & WebAPI"},sidebar:"tutorialSidebar",previous:{title:"Lessons from Django",permalink:"/Untitled-Gundam-Game/docs/dotnet/lessons_from_django"},next:{title:"Azure & CI/CD",permalink:"/Untitled-Gundam-Game/docs/dotnet/azure"}},s={},p=[{value:"Controller",id:"controller",level:3},{value:"Views",id:"views",level:3},{value:"Models",id:"models",level:3},{value:"Service Layer",id:"service-layer",level:3},{value:"WebAPI",id:"webapi",level:3}],u={toc:p},m="wrapper";function d(e){let{components:t,...i}=e;return(0,l.kt)(m,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"mvc--webapi"},"MVC & WebAPI"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Models"),": Data model\n",(0,l.kt)("strong",{parentName:"p"},"Views"),": UI Components\n",(0,l.kt)("strong",{parentName:"p"},"Controllers"),": Handle browser requests, retrieve model data then return a response\n",(0,l.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/models-data/validating-with-a-service-layer-cs"},"Service Layer"),": Additional layer that separates validation logic from your controller"),(0,l.kt)("p",null,"Ideas behind MVC:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Separation of converns. E.G. Views don't handle business logic")),(0,l.kt)("h3",{id:"controller"},"Controller"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"MVC implements URL routing logic in this format: ",(0,l.kt)("inlineCode",{parentName:"li"},"/[Controller]/[ActionName]/[Parameters]")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"public string Index()")," : BaseURL method"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MapControllerRoute")," : URL template where you define parameters of a route"),(0,l.kt)("li",{parentName:"ul"},"Components of a route method",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"IActionResult")," : Interface for contracts that return the result of an action method. Generally return this or a something derived from ActionResult"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"View")," method : Renders the view",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If the view is not specified, MVC defaults to using the view with the same name as the action method"),(0,l.kt)("li",{parentName:"ul"},"E.G. ",(0,l.kt)("inlineCode",{parentName:"li"},"/HelloWorld/Index")," --\x3e ",(0,l.kt)("inlineCode",{parentName:"li"},"/Views/HelloWorld/Index.cshtml")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"How to pass data from controllers to views?"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The preferred method is to use a View Model"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"View Model")," : Pass strongly typed models using the queryset as a parameter in the ",(0,l.kt)("inlineCode",{parentName:"li"},"View()")," method. You can define the model to be passed to a view with a ",(0,l.kt)("inlineCode",{parentName:"li"},"@model")," directive"),(0,l.kt)("li",{parentName:"ul"},"Controllers can set ",(0,l.kt)("inlineCode",{parentName:"li"},"ViewData")," K/V pairs which can be used in the Views through the ",(0,l.kt)("inlineCode",{parentName:"li"},"ViewData")," dictionary. These models are not strongly typed.")))),(0,l.kt)("h3",{id:"views"},"Views"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Views/_ViewStart.cshtml")," brings in shared layouts to each view"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/aspnet/core/mvc/views/layout?view=aspnetcore-6.0"},"Layout")," : Reduce duplicated code in views by specifying common structure in a webpage",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The default page is named ",(0,l.kt)("inlineCode",{parentName:"li"},"_Layout.cshtml")," by convention"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("img",{alt:"Layouts Example",src:n(8176).Z,width:"1458",height:"851"})))),(0,l.kt)("li",{parentName:"ul"},"Views should avoid doing business logic or interacting with the db directly")),(0,l.kt)("p",null,"View Model: Alternate way to prevent overposting"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Not the same as Data Transfer objects (DTO). View models encapsulate behaviour while DTOs cannot"),(0,l.kt)("li",{parentName:"ul"},"View models cannot be serialised unlike DTOs, so they are not used in SPAs")),(0,l.kt)("h3",{id:"models"},"Models"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"DbContext")," : Represents the unit of work",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"KNOWS Entities that have been previously queried on it")," --\x3e This can introduce bugs"))),(0,l.kt)("li",{parentName:"ul"},"DbSet")),(0,l.kt)("p",null,"Register DbContext with the dependency injection container"),(0,l.kt)("p",null,"Foreign Keys:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A One-To-One relationship requires:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A primary key on the principal entity",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Optional: Reference navigation to principal"),(0,l.kt)("li",{parentName:"ul"},"By default, Id is the primary key"))),(0,l.kt)("li",{parentName:"ul"},"A foreign key on the dependent entity",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Optional: Reference navigation to principal"),(0,l.kt)("li",{parentName:"ul"},"By default, EF makes a property as a foreign key when its name matches with the principal entity's primary key"))))),(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"[ForeignKey(name)")," to override the default attribute for a foreign key",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.entityframeworktutorial.net/code-first/foreignkey-dataannotations-attribute-in-code-first.aspx"},"https://www.entityframeworktutorial.net/code-first/foreignkey-dataannotations-attribute-in-code-first.aspx"))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"using System.ComponentModel.DataAnnotations.Schema;\npublic class Post  {  // principal\n  public int Id { get; set; }\n  public ICollection<Comment> Comments { get; set; }  // One to many relationship with Comment\n}\n\npublic class Comment  { // dependent\n  public int Id { get; set; }\n  public int PostId { get; set; } // Reference to Post's PK makes this the foreign key\n  public Post Post { get; set; }  // Reference navigation to principal\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/ef/core/modeling/"},"Conditions & ",(0,l.kt)("inlineCode",{parentName:"a"},"DataAnnotation")," Attributes on Entity attributes"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"required")," keyword : Used to prevent warning on uninitialized non-nullable values."),(0,l.kt)("li",{parentName:"ul"},"Many-to-one relationships: Uze ",(0,l.kt)("inlineCode",{parentName:"li"},"ICollection<>")),(0,l.kt)("li",{parentName:"ul"},"Can override ",(0,l.kt)("inlineCode",{parentName:"li"},"OnModelCreating")," in your DbContext and do custom configuration with the fluent API"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'[Comment("")]')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"[MaxLength(X)]")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"[Unicode]")," configured as unicode by default"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"[Column(Order = X)]"))),(0,l.kt)("p",null,"Default Values"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"[DatabaseGenerated(DatabaseGeneratedOption.Identity)]")," value generated on inserted entities (On ANY INSERT)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"[DatabaseGenerated(DatabaseGeneratedOption.Computed)]")," value generated on add or update"),(0,l.kt)("li",{parentName:"ul"},"^ is equvalent to:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"modelBuilder.Entity<Blog>()\n    .Property(b => b.Rating)\n    .HasDefaultValue(3);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"EF Core doesn't specify a default way to set timestamps:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'modelBuilder.Entity<Blog>()\n    .Property(b => b.Created)\n    .HasDefaultValueSql("getdate()");\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Computed values:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"modelBuilder.Entity<Person>()\n    .Property(p => p.DisplayName)\n    .HasComputedColumnSql(\"[LastName] + ', ' + [FirstName]\");\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"JSON Columns"),": Requires EF Core 7"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://devblogs.microsoft.com/dotnet/announcing-ef7-release-candidate-2/"},"Release Notes")),(0,l.kt)("li",{parentName:"ul"})),(0,l.kt)("p",null,"Select:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_context.model.FirstOrDefaultAsync"),": Select one or return default",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SingleOrDefaultAsync"),": throw error if more than one (extra work unnecessary if you just select one)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"FindAsync"),": Find entity with PK")))),(0,l.kt)("p",null,"Model validation:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"TODO: ",(0,l.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-7.0"},"https://learn.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-7.0")),(0,l.kt)("li",{parentName:"ul"},"Encountering this error frequently?")),(0,l.kt)("p",null,"Loading related data:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Lazy loading by default --\x3e Data is not retried until a navigation property is accessed"),(0,l.kt)("li",{parentName:"ul"},"Eager loading: Use ",(0,l.kt)("inlineCode",{parentName:"li"},"Include")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"ThenInclude")," to read related classes in a larger, single query"),(0,l.kt)("li",{parentName:"ul"},"Explicit loading: Use ",(0,l.kt)("inlineCode",{parentName:"li"},"Load")," method to do explicit loading")),(0,l.kt)("p",null,"Performance:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Pagination"),(0,l.kt)("li",{parentName:"ul"},"Limiting number of fetched objects with ",(0,l.kt)("inlineCode",{parentName:"li"},"Take"))),(0,l.kt)("h3",{id:"service-layer"},"Service Layer"),(0,l.kt)("h3",{id:"webapi"},"WebAPI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Data Transfer Object (DTO)")))}d.isMDXComponent=!0},8176:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/layouts-aff8a916ec4c2f8e176578af41f999f5.png"}}]);