"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3058],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,f=m["".concat(s,".").concat(u)]||m[u]||p[u]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2787:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"MVC"},i="MVC",l={unversionedId:"dotnet/mvc",id:"dotnet/mvc",title:"MVC",description:"Models: Data model",source:"@site/docs/dotnet/04_mvc.md",sourceDirName:"dotnet",slug:"/dotnet/mvc",permalink:"/Untitled-Gundam-Game/docs/dotnet/mvc",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dotnet/04_mvc.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"MVC"},sidebar:"tutorialSidebar",previous:{title:"Lessons from Django",permalink:"/Untitled-Gundam-Game/docs/dotnet/lessons_from_django"}},s={},c=[{value:"Controller",id:"controller",level:3},{value:"Views",id:"views",level:3},{value:"Models",id:"models",level:3},{value:"Service Layer",id:"service-layer",level:3}],d={toc:c},m="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(m,(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mvc"},"MVC"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Models"),": Data model\n",(0,a.kt)("strong",{parentName:"p"},"Views"),": UI Components\n",(0,a.kt)("strong",{parentName:"p"},"Controllers"),": Handle browser requests, retrieve model data then return a response\n",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/models-data/validating-with-a-service-layer-cs"},"Service Layer"),": Additional layer that separates validation logic from your controller"),(0,a.kt)("p",null,"Ideas behind MVC:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Separation of converns. E.G. Views don't handle business logic")),(0,a.kt)("h3",{id:"controller"},"Controller"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MVC implements URL routing logic in this format: ",(0,a.kt)("inlineCode",{parentName:"li"},"/[Controller]/[ActionName]/[Parameters]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public string Index()")," : BaseURL method"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MapControllerRoute")," : URL template where you define parameters of a route"),(0,a.kt)("li",{parentName:"ul"},"Components of a route method",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IActionResult")," : Interface for contracts that return the result of an action method. Generally return this or a something derived from ActionResult"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"View")," method : Renders the view",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If the view is not specified, MVC defaults to using the view with the same name as the action method"),(0,a.kt)("li",{parentName:"ul"},"E.G. ",(0,a.kt)("inlineCode",{parentName:"li"},"/HelloWorld/Index")," --\x3e ",(0,a.kt)("inlineCode",{parentName:"li"},"/Views/HelloWorld/Index.cshtml")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"How to pass data from controllers to views?"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The preferred method is to use a View Model"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"View Model")," : Pass strongly typed models using the queryset as a parameter in the ",(0,a.kt)("inlineCode",{parentName:"li"},"View()")," method. You can define the model to be passed to a view with a ",(0,a.kt)("inlineCode",{parentName:"li"},"@model")," directive"),(0,a.kt)("li",{parentName:"ul"},"Controllers can set ",(0,a.kt)("inlineCode",{parentName:"li"},"ViewData")," K/V pairs which can be used in the Views through the ",(0,a.kt)("inlineCode",{parentName:"li"},"ViewData")," dictionary. These models are not strongly typed.")))),(0,a.kt)("h3",{id:"views"},"Views"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Views/_ViewStart.cshtml")," brings in shared layouts to each view"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/aspnet/core/mvc/views/layout?view=aspnetcore-6.0"},"Layout")," : Reduce duplicated code in views by specifying common structure in a webpage",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The default page is named ",(0,a.kt)("inlineCode",{parentName:"li"},"_Layout.cshtml")," by convention"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("img",{alt:"Layouts Example",src:n(8176).Z,width:"1458",height:"851"})))),(0,a.kt)("li",{parentName:"ul"},"Views should avoid doing business logic or interacting with the db directly")),(0,a.kt)("h3",{id:"models"},"Models"),(0,a.kt)("h3",{id:"service-layer"},"Service Layer"))}p.isMDXComponent=!0},8176:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/layouts-aff8a916ec4c2f8e176578af41f999f5.png"}}]);